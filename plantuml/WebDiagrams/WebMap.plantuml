@startuml RepositoryClassDiagram

left to right direction

skin rose

class SquadService {}
class AvailabilityService {}
class MemberService {}
class AuthenticationService {}


class SquadController {
    -_logger : Logger<SquadController>
    -_squadService : SquadService
    -_memberService : MemberService
    -_availabilityService : AvailabilityService
    +SquadController(logger : Logger<SquadController>)
    +Create() : IActionResult
    +Create(CreateSquadViewModel model) : IActionResult
    +Find() : IActionResult
    +Join(Guid squadId) : IActionResult
    +Leave(Guid squadId) : IActionResult
    +Details(squadId : Guid) : IActionResult
    -MapToViewModels(List<Squad> squads) : List<FindSquadModel>
    -MapToViewModels(List<Member> members, Guid squadId) : List<SquadDetailModel>
}

class SquadManagementController {
    -_logger : Logger<SquadController>
    -_squadService : SquadService
    -_memberService : MemberService
    -_availabilityService : AvailabilityService
    +Members(Guid squadId) : IActionResult
    -MapToViewModels(List<Member> members, Guid squadId, bool inSquad) : List<MemberDetailsForSquad>
    +AddMember(Guid memberId, Guid squadId) : IActionResult
    +RemoveMember(Guid memberId, Guid squadId) : IActionResult
}

class AccountController {
    -_logger : Logger<AccountController>
    -_memberService : MemberService
    -_authenticationService : AuthenticationService
    +HomeController(logger : Logger<AccountController>)
    +Login() : IActionResult
    +Login(LoginViewModel model, string? returnUrl) : Task<IActionResult>
    +Create() : IActionResult
    +Create(CreateAccountViewModel model) : IActionResult
    +Logout() : Task<IActionResult>
}

class AvailabilityController {
    -_logger : Logger<AvailabilityController>
    -_availabilityService : AvailabilityService
    +AvailabilityController(logger : Logger<AvailabilityController>)
    +Index(Guid id) : IActionResult
    +GetAvailabilityTable(memberId : Guid) : IActionResult
    +GetAvailabilityReadRow(availabilityId: Guid) : IActionResult
    +GetAvailabilityEditRow(availabilityId: Guid) : IActionResult
    +GetMemberAvailabilities(memberId : Guid) : IActionResult
    +SaveAvailability(availability : Availability) : IActionResult
    +UpdateAvailability(availability : Availability) : IActionResult
    +DeleteAvailability(availability : Availability) : IActionResult
    +EditAvailability(availability : Availability) : IActionResult
}

class HomeController {
    -_logger : Logger<SquadController>
    -_squadService : SquadService
    -_memberService : MemberService
    -_availabilityService : AvailabilityService
    +HomeController(logger : Logger<MenuController>)
    +Index() : IActionResult
    +Menu() : IActionResult
}

SquadService <-- SquadController
MemberService <-- SquadController
AvailabilityService <-- SquadController
SquadService <-- SquadManagementController
MemberService <-- SquadManagementController
AvailabilityService <-- SquadManagementController
MemberService <-- AccountController
AuthenticationService <-- AccountController
AvailabilityService <-- AvailabilityController
SquadService <-- HomeController
MemberService <-- HomeController
AvailabilityService <-- HomeController

@enduml